openapi: 3.0.1
info:
  title: Scaffold Servise
  description: Base for other projects
  version: "0.1"
servers:
  - url: http://localhost:8080/dev
security:
  - User: [ ]
  - Jwt: [ ]
paths:
  /status:
    get:
      tags:
        - Health-Check
      summary: Get status
      description: Returns info about service
      responses:
        200:
          description: Service info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /{mId}/buzz:
    get:
      tags:
        - Buzz
      summary: Returns all records from database
      parameters:
        - name: mId
          in: path
          description: Param for middleware
          required: true
          schema:
            type: string
            x-exportParamName: MId
          x-exportParamName: MId
        - name: order
          in: query
          description: Sorting order of records
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
            x-exportParamName: Order
            x-optionalDataType: String
          x-exportParamName: Order
          x-optionalDataType: String
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            default: 1
            x-exportParamName: Page
            x-optionalDataType: Float32
          x-exportParamName: Page
          x-optionalDataType: Float32
        - name: pageSize
          in: query
          description: Number of records on one page
          schema:
            type: number
            default: 20.0
            x-exportParamName: PageSize
            x-optionalDataType: Float32
          x-exportParamName: PageSize
          x-optionalDataType: Float32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationParam'
        400:
          description: Autorization header invalid or bad param for middleware
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
            bad_param:
              example:
                errcode: 400
                errmsg: Wrong param
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
    post:
      tags:
        - Buzz
      summary: Add new buzz record in db
      parameters:
        - name: mId
          in: path
          description: Param for middleware
          required: true
          schema:
            type: string
            x-exportParamName: MId
          x-exportParamName: MId
      requestBody:
        description: Buzz object that needs to be added to the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buzz'
        required: false
      responses:
        201:
          description: Record was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buzz'
        400:
          description: Autorization header invalid or bad param for middleware
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
            bad_param:
              example:
                errcode: 400
                errmsg: Wrong param
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
      x-codegen-request-body-name: json
  /{mId}/buzz/{Id}:
    get:
      tags:
        - Buzz
      summary: Returns buzz record with given id
      parameters:
        - name: mId
          in: path
          description: Param for middleware
          required: true
          schema:
            type: string
            x-exportParamName: MId
          x-exportParamName: MId
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationParam'
        400:
          description: Autorization header invalid or bad param for middleware
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
            bad_param:
              example:
                errcode: 400
                errmsg: Wrong param
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
    put:
      tags:
        - Buzz
      summary: Update record in database with given id
      parameters:
        - name: mId
          in: path
          description: Param for middleware
          required: true
          schema:
            type: string
            x-exportParamName: MId
          x-exportParamName: MId
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      requestBody:
        description: Buzz object for updating existing records in database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buzz'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        400:
          description: Autorization header invalid or bad param for middleware
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
            bad_param:
              example:
                errcode: 400
                errmsg: Wrong param
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
      x-codegen-request-body-name: json
    delete:
      tags:
        - Buzz
      summary: Delete record from database with given id
      parameters:
        - name: mId
          in: path
          description: Param for middleware
          required: true
          schema:
            type: string
            x-exportParamName: MId
          x-exportParamName: MId
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: success
        400:
          description: Autorization header invalid or bad param for middleware
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
            bad_param:
              example:
                errcode: 400
                errmsg: Wrong param
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
  /couch:
    get:
      tags:
        - CouchDB
      summary: Returns all records from couchDB database
      parameters:
        - name: order
          in: query
          description: Sorting order of records
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
            x-exportParamName: Order
            x-optionalDataType: String
          x-exportParamName: Order
          x-optionalDataType: String
        - name: page
          in: query
          description: Page number
          schema:
            type: number

            default: 1.0
            x-exportParamName: Page
            x-optionalDataType: Float32
          x-exportParamName: Page
          x-optionalDataType: Float32
        - name: pageSize
          in: query
          description: Number of records on one page
          schema:
            type: number

            default: 20.0
            x-exportParamName: PageSize
            x-optionalDataType: Float32
          x-exportParamName: PageSize
          x-optionalDataType: Float32
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationParamCouch'
        400:
          description: Autorization header invalid
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
    post:
      tags:
        - CouchDB
      summary: Add new document in couchDB
      requestBody:
        description: Document that needs to be added to the couchDB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Couch'
        required: false
      responses:
        201:
          description: Document was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Couch'
        400:
          description: Autorization header invalid
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
      x-codegen-request-body-name: json
  /couch/{Id}:
    get:
      tags:
        - CouchDB
      summary: Returns document with given id
      parameters:
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Couch'
        400:
          description: Autorization header invalid
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
    put:
      tags:
        - CouchDB
      summary: Update document in couchDB with given id
      parameters:
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      requestBody:
        description: Document for updating existing records in couchDB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouchPUT'
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: Document was updated successful
        400:
          description: Autorization header invalid
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
      x-codegen-request-body-name: json
    delete:
      tags:
        - CouchDB
      summary: Delete document from couchDB with given id
      parameters:
        - name: Id
          in: path
          description: id
          required: true
          schema:
            type: number

            x-exportParamName: Id
          x-exportParamName: Id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: Document was successfully deleted
        400:
          description: Autorization header invalid
          content:
            no_token:
              example:
                errcode: 400
                errmsg: JWT Header must not bee empty
            token_is_invalid:
              example:
                errcode: 400
                errmsg: JWT Header is invalid json
        404:
          description: Can't found resource
          content:
            bad_body:
              example:
                errcode: 404
                message: Not Found
components:
  schemas:
    Health:
      type: object
      required:
        - app
        - version
      properties:
        app:
          type: string
          description: app name
        version:
          type: string
          description: app version
        tag:
          type: string
          description: app tag
        build:
          type: string
          description: app build
      example:
        app: app
        build: build
        tag: tag
        version: version
    Buzz:
      type: object
      required:
        - name
        - buzzType
      properties:
        name:
          type: string
          example: test
        buzzType:
          type: string
          example: testA
        description:
          type: string
          example: test object
      example:
        buzzType: testA
        name: test
        description: test object
    Couch:
      type: object
      required:
        - id
      properties:
        id:
          type: integer

          example: 1
        firstName:
          type: string
          example: Firs name example
        secondName:
          type: string
          example: Second name example
      example:
        firstName: Firs name example
        id: 1
        secondName: Second name example
    CouchPUT:
      type: object
      required:
        - firstName
        - secondName
      properties:
        firstName:
          type: string
          example: Firs name example
        secondName:
          type: string
          example: Second name example
    ReturnedJSON:
      type: object
      required:
        - id
        - name
        - buzzType
        - createdAt
        - details
      properties:
        id:
          type: integer

          example: 1
        name:
          type: string
          example: test
        buzzType:
          type: string
          example: testA
        description:
          type: string
          example: test object
        details:
          type: object
          properties: { }
          example: { }
        createdAt:
          type: integer

          example: 0
        updatedAt:
          type: integer

          example: 0
      example:
        createdAt: 0
        buzzType: testA
        name: test
        description: test object
        details: { }
        id: 1
        updatedAt: 0
    PaginationParam:
      type: object
      required:
        - page
        - pageSize
        - total
        - records
      properties:
        page:
          type: integer

          example: 1
        pageSize:
          type: integer

          example: 10
        order:
          type: string
          example: asc
        total:
          type: integer

          example: 10
        records:
          type: array
          items:
            $ref: '#/components/schemas/ReturnedJSON'
      example:
        total: 10
        records:
          - createdAt: 0
            buzzType: testA
            name: test
            description: test object
            details: { }
            id: 1
            updatedAt: 0
          - createdAt: 0
            buzzType: testA
            name: test
            description: test object
            details: { }
            id: 1
            updatedAt: 0
        pageSize: 10
        page: 1
        order: asc
    PaginationParamCouch:
      required:
        - page
        - pageSize
        - total
        - records
      type: object
      properties:
        page:
          type: integer

          example: 1
        pageSize:
          type: integer

          example: 10
        order:
          type: string
          example: asc
        total:
          type: integer

          example: 10
        records:
          type: array
          items:
            $ref: '#/components/schemas/Couch'
      example:
        total: 10
        records:
          - firstName: Firs name example
            id: 1
            secondName: Second name example
          - firstName: Firs name example
            id: 1
            secondName: Second name example
        pageSize: 10
        page: 1
        order: asc
  responses:
    JWTError:
      description: Autorization header invalid
      content:
        no_token:
          example:
            errcode: 400
            errmsg: JWT Header must not bee empty
        token_is_invalid:
          example:
            errcode: 400
            errmsg: JWT Header is invalid json
    NotFoundError:
      description: Can't found resource
      content:
        bad_body:
          example:
            errcode: 404
            message: Not Found
    UnauthorizedError:
      description: Autorization header invalid or bad param for middleware
      content:
        no_token:
          example:
            errcode: 400
            errmsg: JWT Header must not bee empty
        token_is_invalid:
          example:
            errcode: 400
            errmsg: JWT Header is invalid json
        bad_param:
          example:
            errcode: 400
            errmsg: Wrong param
  parameters:
    MID:
      name: mId
      in: path
      description: Param for middleware
      required: true
      schema:
        type: string
        x-exportParamName: MId
      x-exportParamName: MId
    ID:
      name: Id
      in: path
      description: id
      required: true
      schema:
        type: number

        x-exportParamName: Id
      x-exportParamName: Id
    Page:
      name: page
      in: query
      description: Page number
      schema:
        type: number

        default: 1.0
        x-exportParamName: Page
        x-optionalDataType: Float32
      x-exportParamName: Page
      x-optionalDataType: Float32
    Order:
      name: order
      in: query
      description: Sorting order of records
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
        x-exportParamName: Order
        x-optionalDataType: String
      x-exportParamName: Order
      x-optionalDataType: String
    PageSize:
      name: pageSize
      in: query
      description: Number of records on one page
      schema:
        type: number

        default: 20.0
        x-exportParamName: PageSize
        x-optionalDataType: Float32
      x-exportParamName: PageSize
      x-optionalDataType: Float32
  securitySchemes:
    Jwt:
      type: apiKey
      description: '{\\"jti\\":\\"1\\"} - use it without proxy; When using curl escape
        double quotes'
      name: Jwt
      in: header
    User:
      type: apiKey
      description: Get from POST:{USER-API}/login/ OR POST:{USER-API}/auth/ OR POST:{USER-API}/verify/password/
      name: Authorization
      in: header
